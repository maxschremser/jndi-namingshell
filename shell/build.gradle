/*
 * This example is from the book "Java Enterprise in a Nutshell".
 * Copyright (c) 1999 by O'Reilly & Associates.
 * You may distribute this source code for non-commercial purposes only.
 * You may study, modify, and use this example for any purpose, as long as
 * this notice is retained.  Note that this example is provided "as is",
 * WITHOUT WARRANTY of any kind either expressed or implied.
 */

group 'com.schremser.jndi.shell'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

apply plugin: 'idea'
apply plugin: 'groovy'
apply plugin: 'application'

mainClassName = 'com.schremser.jndi.shell.Main'

dependencies {
    compile 'org.glassfish.mq:imq:5.1'
    compile 'com.sun.messaging.mq:fscontext:4.+'
    compile 'commons-cli:commons-cli:1.2'
    compile('jline:jline:2.11') {
        exclude(group: 'junit', module: 'junit')
    }

    compile 'org.codehaus.groovy:groovy-groovysh:2.2.+'

    // Test Classes
    testCompile 'junit:junit:4.11'
}

sourceSets {
    main {
        resources {
            srcDir 'src/main/resources'
            include '**/*.properties', '**/*.xml', '**/.jndienv'
            output.resourcesDir = 'build/classes/main'
        }
    }
}

/**
 * To run the shell task, first install it
 * gradle installDist
 *
 * then run the app
 * gradle -q shell
 */
task(shell, dependsOn: 'classes', type: JavaExec) {
    main = mainClassName
    classpath = files(sourceSets.main.runtimeClasspath, ".")
    standardInput = System.in
    standardOutput = System.out
    jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5006']
}
